package date;import java.text.SimpleDateFormat;import java.time.LocalDate;import java.time.LocalDateTime;import java.time.LocalTime;import java.time.ZoneOffset;import java.time.format.DateTimeFormatter;import java.time.temporal.TemporalAdjusters;import java.util.Date;import java.util.HashMap;import java.util.Map;/** * ProjectName * <BR><B>FileDescription：</B><BR><BR> * DescriptionDetail * * @author ：ZhangHanYuan zhang.hanyuan@qq.com * @date : 2019-05-08 00:39 * @since 1.8 */public class TestDate {    public static void main(String[] args) {//        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//        Date date = new Date();//        date.setTime(0L);//        System.out.println(simpleDateFormat.format(date));        String dateStr =  "2019.05.21";        System.out.println(getBeginTimeAndEndTimeForOneDay(dateStr));    }    private static Map<String, String> getBeginTimeAndEndTimeForOneDay(String theDate){        Map<String, String> result = new HashMap<>(16);        String[] dateArray = theDate.split("\\.");        LocalDate crischristmas = LocalDate.of( Integer.valueOf(dateArray[0]), Integer.valueOf(dateArray[1]), Integer.valueOf(dateArray[2]));        LocalDateTime theStartTime = LocalDateTime.of(crischristmas, LocalTime.MIN);        long theStartSecond = theStartTime.toEpochSecond(ZoneOffset.of("+8"));        LocalDateTime theEndTime = LocalDateTime.of(crischristmas, LocalTime.MAX);        long theEndSecond = theEndTime.toEpochSecond(ZoneOffset.of("+8"));        result.put("startSecond", String.valueOf(theStartSecond));        result.put("endSecond", String.valueOf(theEndSecond));        return result;    }    private void test(){//todo:当天零点        LocalDateTime today_start = LocalDateTime.of(LocalDate.now(), LocalTime.MIN);        long todayStartSecond = today_start.toEpochSecond(ZoneOffset.of("+8"));        String td_st_str = today_start.format(DateTimeFormatter.ofPattern("yyyyMMddHHmmss"));        System.out.println(td_st_str);        System.out.println("todayStartSecond:"+todayStartSecond);//todo:        获取当天结束时间        //当天零点        LocalDateTime today_end = LocalDateTime.of(LocalDate.now(), LocalTime.MAX);        long todayEndSecond = today_end.toEpochSecond(ZoneOffset.of("+8"));        String today_end_str = today_end.format(DateTimeFormatter.ofPattern("yyyyMMddHHmmss"));        System.out.println(today_end_str);        System.out.println("todayEndSecond:"+todayEndSecond);        LocalDate today = LocalDate.now();        //本月的第一天        LocalDate firstday1 = LocalDate.of(today.getYear(), today.getMonth(), 1);        String date1 = firstday1 + " 00:00:00";        DateTimeFormatter df = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");        LocalDateTime dateTime1 = LocalDateTime.parse(date1, df);        String td_st_str1 = dateTime1.format(DateTimeFormatter.ofPattern("yyyyMMddHHmmss"));        System.out.println(td_st_str1);        long theMonthStartSecond = dateTime1.toEpochSecond(ZoneOffset.of("+8"));        System.out.println();        //本月的最后一天        LocalDate lastDay2 = today.with(TemporalAdjusters.lastDayOfMonth());        String date2 = lastDay2 + " 23:59:59";        LocalDateTime dateTime2 = LocalDateTime.parse(date2, df);        String td_st_str2 = dateTime2.format(DateTimeFormatter.ofPattern("yyyyMMddHHmmss"));        System.out.println(td_st_str2);        long theMonthEndSecond = dateTime2.toEpochSecond(ZoneOffset.of("+8"));    }}